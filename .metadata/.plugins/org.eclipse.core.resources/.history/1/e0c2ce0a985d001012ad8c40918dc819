#include "usart.h"

/* === 串口句柄实例 ===============================================*/
UART_HandleTypeDef huart3;

/* === GPIO + 时钟底层配置 =========================================*/
static void USART3_MspInit(void)
{
  /* 1) 打开外设时钟 */
  __HAL_RCC_USART3_CLK_ENABLE();
  __HAL_RCC_GPIOC_CLK_ENABLE();

  /* 2) 配置 PC10 = TX, PC11 = RX */
  GPIO_InitTypeDef GPIO_InitStruct = {0};

  /* TX -> PC10, 推挽复用, 低速即可 */
  GPIO_InitStruct.Pin       = GPIO_PIN_10;
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
  GPIO_InitStruct.Pull      = GPIO_NOPULL;
  GPIO_InitStruct.Speed     = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);

  /* RX -> PC11, 输入（内部上拉如硬件已并外拉可省） */
  GPIO_InitStruct.Pin       = GPIO_PIN_11;
  GPIO_InitStruct.Mode      = GPIO_MODE_INPUT;
  GPIO_InitStruct.Pull      = GPIO_NOPULL;      /* 如需内部上拉可改 GPIO_PULLUP */
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
}

/* === USART3 高层初始化 ==========================================*/
void MX_USART3_UART_Init(void)
{
  /* 先做底层 GPIO/时钟配置 */
  USART3_MspInit();

  /* 填充串口参数 */
  huart3.Instance          = USART3;
  huart3.Init.BaudRate     = 115200;
  huart3.Init.WordLength   = UART_WORDLENGTH_8B;
  huart3.Init.StopBits     = UART_STOPBITS_1;
  huart3.Init.Parity       = UART_PARITY_NONE;
  huart3.Init.Mode         = UART_MODE_TX_RX;
  huart3.Init.HwFlowCtl    = UART_HWCONTROL_NONE;
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
  if (HAL_UART_Init(&huart3) != HAL_OK)
  {
    /* 可自行加断言或 LED 报错 */
    while (1) { }
  }
}
}
