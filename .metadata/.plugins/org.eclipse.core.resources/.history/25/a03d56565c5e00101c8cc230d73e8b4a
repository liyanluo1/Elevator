#ifndef STEPPER_MOTOR_H
#define STEPPER_MOTOR_H

#include "stm32f4xx_hal.h"
#include <stdbool.h>

// 步进电机结构体
typedef struct {
    GPIO_TypeDef* pin1_port;
    uint16_t pin1_pin;
    GPIO_TypeDef* pin2_port;
    uint16_t pin2_pin;
    GPIO_TypeDef* pin3_port;
    uint16_t pin3_pin;
    GPIO_TypeDef* pin4_port;
    uint16_t pin4_pin;

    int32_t current_position;    // 当前位置（步数）
    int32_t target_position;     // 目标位置
    uint32_t step_delay;         // 步进延时（ms）
    uint8_t current_step;        // 当前步序
    bool is_moving;              // 是否正在运动
    bool direction;              // 运动方向 (true=正向, false=反向)
} StepperMotor_t;

// 步进电机初始化
void StepperMotor_Init(StepperMotor_t* motor,
                      GPIO_TypeDef* port1, uint16_t pin1,
                      GPIO_TypeDef* port2, uint16_t pin2,
                      GPIO_TypeDef* port3, uint16_t pin3,
                      GPIO_TypeDef* port4, uint16_t pin4);

// 设置步进延时
void StepperMotor_SetSpeed(StepperMotor_t* motor, uint32_t delay_ms);

// 步进电机运动控制
void StepperMotor_MoveSteps(StepperMotor_t* motor, int32_t steps);
void StepperMotor_MoveTo(StepperMotor_t* motor, int32_t position);
void StepperMotor_Stop(StepperMotor_t* motor);

// 步进电机任务处理（在主循环中调用）
void StepperMotor_Task(StepperMotor_t* motor);

// 获取状态信息
int32_t StepperMotor_GetPosition(StepperMotor_t* motor);
bool StepperMotor_IsMoving(StepperMotor_t* motor);
int32_t StepperMotor_GetTargetPosition(StepperMotor_t* motor);

// 设置位置为零点
void StepperMotor_SetZero(StepperMotor_t* motor);

#endif /* STEPPER_MOTOR_H */
